apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs.kotlin"

android {
  compileSdkVersion rootProject.compileSdkVersion

  defaultConfig {
    applicationId "com.tuga.konum"
    minSdkVersion rootProject.minSdkVersion
    targetSdkVersion rootProject.targetSdkVersion
    versionCode 1
    versionName "1.0"

    testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
  }

  buildFeatures {
    dataBinding = true
  }

  android {
    sourceSets {
      String sharedTestDir = 'src/sharedTest/java'
      test {
        java.srcDir sharedTestDir
      }
      androidTest {
        java.srcDir sharedTestDir
      }
    }
  }

  buildTypes {
    debug {
      buildConfigField("String", "SERVER_URL", '"http://192.168.1.44:8888/"')
      resValue("string", "google_maps_key", GOOGLE_MAPS_KEY_DEBUG)
      minifyEnabled false
      testCoverageEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
    }

    release {
      buildConfigField("String", "SERVER_URL", '"http://192.168.1.44:8888/"')
      resValue("string", "google_maps_key", GOOGLE_MAPS_KEY_RELEASE)
      minifyEnabled true
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
      testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
    }
  }

  flavorDimensions "default"

  // If you need to add more flavors, consider using flavor dimensions.

  // Remove mockRelease as it's not needed.

  // Always show the result of every unit test, even if it passes.
  testOptions.unitTests {
    includeAndroidResources = true

    all {
      testLogging {
        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
      }
    }
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  kotlinOptions {
    jvmTarget = "1.8"
  }

  kapt {
    correctErrorTypes = true
  }

  androidExtensions {
    experimental = true
  }
}

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  // Third party
  implementation 'com.hbb20:ccp:2.3.4'
  implementation 'com.github.tbruyelle:rxpermissions:0.10.2'
  implementation "org.jetbrains.anko:anko:$ankoVersion"
  implementation 'com.mlsdev.rximagepicker:library:2.0.0'
  implementation 'com.theartofdev.edmodo:android-image-cropper:2.8.0'

  implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
  implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'
  implementation 'com.google.android.gms:play-services-maps:17.0.0'
  implementation 'com.google.android.gms:play-services-location:17.0.0'

  debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

  implementation "com.google.android.gms:play-services-auth:17.0.0"
  implementation 'com.google.android.gms:play-services-auth-api-phone:17.3.0'

  // App dependencies
  implementation 'androidx.appcompat:appcompat:1.1.0'
  implementation 'androidx.core:core-ktx:1.1.0'
  implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
  implementation 'androidx.legacy:legacy-support-v4:1.0.0'
  implementation 'com.google.android.material:material:1.2.0-alpha02'

  //RxJava
  implementation 'io.reactivex.rxjava2:rxjava:2.2.10'
  implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'

  // Architecture component
  implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
  implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
  // Room
  implementation "androidx.room:room-runtime:$roomVersion"
  kapt "androidx.room:room-compiler:$roomVersion"
  implementation "androidx.room:room-ktx:$roomVersion"

  // Navigation Component
  implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
  implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

  // Dagger
  implementation "com.google.dagger:dagger:$daggerVersion"
  kapt "com.google.dagger:dagger-compiler:$daggerVersion"
  implementation "com.google.dagger:dagger-android-support:$daggerVersion"
  kapt "com.google.dagger:dagger-android-processor:$daggerVersion"
  // Using Dagger in androidTest and Robolectric too
  kaptAndroidTest "com.google.dagger:dagger-compiler:$daggerVersion"
  kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

  // coroutines
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

  // network
  implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
  implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
  implementation "com.squareup.okhttp3:logging-interceptor:$okhttpVersion"
  implementation "com.google.code.gson:gson:$retrofitVersion"
  testImplementation "com.squareup.okhttp3:mockwebserver:$okhttpVersion"

  // glide
  implementation "com.github.bumptech.glide:glide:$glideVersion"
  implementation "com.github.florent37:glidepalette:$glidePaletteVersion"
  kapt "com.github.bumptech.glide:compiler:$glideVersion"

  // debugging
  implementation "com.jakewharton.timber:timber:$timberVersion"
  implementation "com.facebook.stetho:stetho:$stethoVersion"
  implementation "com.facebook.stetho:stetho-okhttp3:$stethoVersion"

  // Dependencies for local unit tests
  testImplementation "junit:junit:$junitVersion"
  testImplementation "org.mockito:mockito-core:$mockitoVersion"
  testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
  testImplementation "androidx.arch.core:core-testing:$archTestingVersion"
  testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
  testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"
  testImplementation "org.robolectric:robolectric:$robolectricVersion"
  testImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
  testImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
  testImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
  testImplementation "com.google.truth:truth:$truthVersion"
  testImplementation "io.mockk:mockk:1.9.3.kotlin12"

  // Dependencies for Android unit tests
  androidTestImplementation "junit:junit:$junitVersion"
  androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
  androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$dexMakerVersion"
  androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesVersion"

  // AndroidX Test - JVM testing
  testImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
  testImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
  testImplementation "androidx.test:rules:$androidXTestRulesVersion"
  // Once https://issuetracker.google.com/127986458 is fixed this can be testImplementation
  implementation "androidx.fragment:fragment-testing:$fragmentVersion"
  implementation "androidx.test:core:$androidXTestCoreVersion"
  implementation "androidx.fragment:fragment:$fragmentVersion"

  // AndroidX Test - Instrumented testing
  androidTestImplementation "androidx.test:core-ktx:$androidXTestCoreVersion"
  androidTestImplementation "androidx.test.ext:junit-ktx:$androidXTestExtKotlinRunnerVersion"
  androidTestImplementation "androidx.test:rules:$androidXTestRulesVersion"
  androidTestImplementation "androidx.room:room-testing:$roomVersion"
  androidTestImplementation "androidx.arch.core:core-testing:$archTestingVersion"
  androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
  androidTestImplementation "androidx.test.espresso:espresso-contrib:$espressoVersion"
  androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"
  androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espressoVersion"
  androidTestImplementation "org.robolectric:annotations:$robolectricVersion"
  implementation "androidx.test.espresso:espresso-idling-resource:$espressoVersion"

  // Kotlin
  implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
  implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"
}
